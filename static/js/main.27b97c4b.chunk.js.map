{"version":3,"sources":["components/SignIn/SignIn.js","components/SignUp/SignUp.js","components/Navigation/Navigation.js","components/Logo/brain.png","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","reportWebVitals.js","index.js"],"names":["SignIn","loadUser","onRouteChange","useState","email","setEmail","password","setPassword","className","id","htmlFor","type","name","onChange","event","target","value","onClick","fetch","method","headers","body","JSON","stringify","then","response","json","user","SignUp","setName","console","log","Navigation","isSignedIn","style","display","justifyContent","Logo","src","brain","alt","Rank","entries","ImageLinkForm","onInputChange","onPictureSubmit","placeholder","FaceRecognition","imageUrl","box","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesInit","main","loadFull","options","background","color","opacity","particles","links","distance","enable","triangles","move","speed","size","shape","App","input","setInput","setImageUrl","setBox","route","setRoute","joined","setUser","setIsSignedIn","data","init","respone","count","Object","assign","displayFaceBox","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","top_row","right_col","bottom_row","left_col","calculateFaceLocation","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.27b97c4b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst SignIn = ({ loadUser, onRouteChange }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const onPasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const onSubmitSignin = () => {\n    fetch(\"https://trd2022-smartbrain-api.herokuapp.com/signin\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user.id) {\n          loadUser(user);\n          onRouteChange(\"home\");\n        }\n      });\n  };\n\n  return (\n    <div className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                Email\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                onChange={onEmailChange}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={onPasswordChange}\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n              type=\"submit\"\n              value=\"Sign in\"\n              onClick={onSubmitSignin}\n            />\n          </div>\n          <div className=\"lh-copy mt3\">\n            <p\n              onClick={() => onRouteChange(\"signup\")}\n              className=\"f6 link dim black db pointer\"\n            >\n              Sign up\n            </p>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React, { useState } from \"react\";\n\nconst SignUp = ({ loadUser, onRouteChange }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const onEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const onPasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const onSubmitSignUp = () => {\n    fetch(\"https://trd2022-smartbrain-api.herokuapp.com/signup\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        console.log(user);\n        if (user.id) {\n          loadUser(user);\n          onRouteChange(\"home\");\n        }\n      });\n  };\n\n  return (\n    <div className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0\">Sign Up</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                Name\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"Text\"\n                name=\"name\"\n                id=\"name\"\n                onChange={onNameChange}\n              />\n            </div>{\" \"}\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                Email\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n                onChange={onEmailChange}\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                onChange={onPasswordChange}\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n              type=\"submit\"\n              value=\"Sign Up\"\n              onClick={onSubmitSignUp}\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signout\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Sign Out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Sign In\n        </p>\n        <p\n          onClick={() => onRouteChange(\"signup\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Sign Up\n        </p>\n      </nav>\n    );\n  }\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/brain.9cf05298.png\";","import React from \"react\";\nimport Tilt from \"react-parallax-tilt\";\n\nimport brain from \"./brain.png\";\nimport \"./Logo.css\";\n\nconst Logo = () => {\n  return (\n    <div className=\"center ma4 mt0\">\n      <Tilt className=\"Tilt br2 shadow-2\">\n        <div className=\"Tilt-inner pa3\">\n          <img src={brain} alt=\"brain\" />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\n\nconst Rank = ({ name, entries }) => {\n  return (\n    <>\n      <div className=\"white f3\">{`${name}, your current entry count is...`}</div>\n      <div className=\"white f1\">{`#${entries}`}</div>\n    </>\n  );\n};\n\nexport default Rank;\n","import React from \"react\";\nimport \"./ImageLinkForm.css\";\n\nconst ImageLinkForm = ({ onInputChange, onPictureSubmit }) => {\n  return (\n    <>\n      <p className=\"f3\">\n        {\"This Magin Brain will detect faces in your pictures. Give it a try!\"}\n      </p>\n      <div className=\"center\">\n        <div className=\"form center pa4 br3 shadow-5\">\n          <input\n            className=\"f4 pa2 w-70\"\n            type=\"text\"\n            placeholder=\"Enter the link here...\"\n            onChange={onInputChange}\n          />\n          <button\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\n            onClick={onPictureSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from \"react\";\n\nimport \"./FaceRecognition.css\";\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className=\"center ma\">\n      <div className=\"absolute mt4\">\n        <img\n          id=\"inputImage\"\n          src={imageUrl}\n          alt=\"\"\n          width=\"500px\"\n          height=\"auto\"\n        />\n        <div\n          className=\"bounding-box\"\n          style={{\n            top: box.topRow,\n            right: box.rightCol,\n            bottom: box.bottomRow,\n            left: box.leftCol,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import { useState } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\nimport SignIn from \"./components/SignIn/SignIn\";\nimport SignUp from \"./components/SignUp/SignUp\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport \"./App.css\";\n\nconst particlesInit = async (main) => {\n  // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n  // starting from v2 you can add only the features you need reducing the bundle size\n  await loadFull(main);\n};\n\nconst options = {\n  background: {\n    color: {\n      value: \"#000\",\n    },\n    opacity: 0.3,\n  },\n  particles: {\n    links: {\n      distance: 150,\n      enable: true,\n      triangles: {\n        enable: false,\n        opacity: 0.05,\n      },\n    },\n    move: {\n      enable: true,\n      speed: 2,\n    },\n    size: {\n      value: 2,\n    },\n    shape: {\n      type: \"circle\",\n    },\n  },\n};\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [box, setBox] = useState({});\n  const [route, setRoute] = useState(\"signin\");\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  });\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  const loadUser = (data) => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n    });\n  };\n\n  const calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    return {\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n      leftCol: clarifaiFace.left_col * width,\n    };\n  };\n\n  const displayFaceBox = (box) => {\n    setBox(box);\n  };\n\n  const onInputChange = (event) => {\n    setInput(event.target.input);\n  };\n\n  const onPictureSubmit = () => {\n    setImageUrl(input);\n    fetch(\"https://trd2022-smartbrain-api.herokuapp.com/imageurl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          fetch(\"https://trd2022-smartbrain-api.herokuapp.com/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: user.id,\n            }),\n          })\n            .then((respone) => respone.json())\n            .then((count) => {\n              setUser(Object.assign(user, { entries: count }));\n            });\n        }\n\n        displayFaceBox(calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onRouteChange = (route) => {\n    if (route === \"signout\") {\n      setInput(\"\");\n      setImageUrl(\"\");\n      setBox({});\n      setRoute(\"\");\n      setUser({\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\",\n      });\n    } else if (route === \"home\") {\n      setIsSignedIn(true);\n    }\n\n    setRoute(route);\n  };\n\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\" init={particlesInit} options={options} />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={onRouteChange} />\n      {route === \"home\" ? (\n        <>\n          <Logo />\n          <Rank name={user.name} entries={user.entries} />\n          <ImageLinkForm\n            onInputChange={onInputChange}\n            onPictureSubmit={onPictureSubmit}\n          />\n          <FaceRecognition box={box} imageUrl={imageUrl} />\n        </>\n      ) : route === \"signin\" ? (\n        <SignIn loadUser={loadUser} onRouteChange={onRouteChange} />\n      ) : (\n        <SignUp onRouteChange={onRouteChange} loadUser={loadUser} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"tachyons\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}