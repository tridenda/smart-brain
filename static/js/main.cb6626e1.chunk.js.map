{"version":3,"sources":["components/SignIn/SignIn.js","components/SignUp/SignUp.js","components/Navigation/Navigation.js","components/Logo/brain.png","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","reportWebVitals.js","index.js"],"names":["SignIn","onEmailChange","event","setState","email","target","value","onPasswordChange","password","onSubmitSignin","fetch","method","headers","body","JSON","stringify","state","then","response","json","user","id","props","loadUser","onRouteChange","this","className","htmlFor","type","name","onChange","onClick","Component","SignUp","onNameChange","onSubmitSignUp","console","log","entries","joined","Navigation","isSignedIn","style","display","justifyContent","Logo","src","brain","alt","Rank","ImageLinkForm","onInputChange","onPictureSubmit","placeholder","FaceRecognition","imageUrl","box","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesInit","main","loadFull","options","background","color","opacity","fpsLimit","interactivity","events","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","links","collisions","move","direction","outModes","default","random","speed","straight","number","density","area","shape","size","min","max","detectRetina","initialState","input","route","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","top_row","right_col","bottom_row","left_col","displayFaceBox","respone","count","Object","assign","catch","err","init","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.cb6626e1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass SignIn extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onSubmitSignin = () => {\n    fetch(\"https://trd2022-smartbrain-api.herokuapp.com/signin\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange(\"home\");\n        }\n      });\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n\n    return (\n      <div className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n                onClick={this.onSubmitSignin}\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRouteChange(\"signup\")}\n                className=\"f6 link dim black db pointer\"\n              >\n                Sign up\n              </p>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\",\n      },\n    };\n  }\n\n  onNameChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onSubmitSignUp = () => {\n    fetch(\"https://trd2022-smartbrain-api.herokuapp.com/signup\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        console.log(user);\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange(\"home\");\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Sign Up</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"Text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.onNameChange}\n                />\n              </div>{\" \"}\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign Up\"\n                onClick={this.onSubmitSignUp}\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React from \"react\";\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signout\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Sign Out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Sign In\n        </p>\n        <p\n          onClick={() => onRouteChange(\"signup\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Sign Up\n        </p>\n      </nav>\n    );\n  }\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/brain.9cf05298.png\";","import React from \"react\";\nimport Tilt from \"react-parallax-tilt\";\n\nimport brain from \"./brain.png\";\nimport \"./Logo.css\";\n\nconst Logo = () => {\n  return (\n    <div className=\"center ma4 mt0\">\n      <Tilt className=\"Tilt br2 shadow-2\">\n        <div className=\"Tilt-inner pa3\">\n          <img src={brain} alt=\"brain\" />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\n\nconst Rank = ({ name, entries }) => {\n  return (\n    <>\n      <div className=\"white f3\">{`${name}, your current entry count is...`}</div>\n      <div className=\"white f1\">{`#${entries}`}</div>\n    </>\n  );\n};\n\nexport default Rank;\n","import React from \"react\";\nimport \"./ImageLinkForm.css\";\n\nconst ImageLinkForm = ({ onInputChange, onPictureSubmit }) => {\n  return (\n    <>\n      <p className=\"f3\">\n        {\"This Magin Brain will detect faces in your pictures. Give it a try!\"}\n      </p>\n      <div className=\"center\">\n        <div className=\"form center pa4 br3 shadow-5\">\n          <input\n            className=\"f4 pa2 w-70\"\n            type=\"text\"\n            placeholder=\"Enter the link here...\"\n            onChange={onInputChange}\n          />\n          <button\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\n            onClick={onPictureSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from \"react\";\n\nimport \"./FaceRecognition.css\";\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className=\"center ma\">\n      <div className=\"absolute mt4\">\n        <img\n          id=\"inputImage\"\n          src={imageUrl}\n          alt=\"\"\n          width=\"500px\"\n          height=\"auto\"\n        />\n        <div\n          className=\"bounding-box\"\n          style={{\n            top: box.topRow,\n            right: box.rightCol,\n            bottom: box.bottomRow,\n            left: box.leftCol,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import { Component } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\nimport SignIn from \"./components/SignIn/SignIn\";\nimport SignUp from \"./components/SignUp/SignUp\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport \"./App.css\";\n\n// Begin tsparticles\nconst particlesInit = async (main) => {\n  // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n  // starting from v2 you can add only the features you need reducing the bundle size\n  await loadFull(main);\n};\n\nconst options = {\n  background: {\n    color: {\n      value: \"#0d47a1\",\n    },\n    opacity: 0.2,\n  },\n  fpsLimit: 120,\n  interactivity: {\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\",\n      },\n      onHover: {\n        enable: true,\n        mode: \"repulse\",\n      },\n      resize: true,\n    },\n    modes: {\n      push: {\n        quantity: 4,\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4,\n      },\n    },\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\",\n    },\n    links: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1,\n    },\n    collisions: {\n      enable: true,\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outModes: {\n        default: \"bounce\",\n      },\n      random: true,\n      speed: 3,\n      straight: false,\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800,\n      },\n      value: 80,\n    },\n    opacity: {\n      value: 0.5,\n    },\n    shape: {\n      type: \"circle\",\n    },\n    size: {\n      value: { min: 1, max: 5 },\n    },\n  },\n  detectRetina: true,\n};\n// End tsparticles\n\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  box: {},\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    return {\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n      leftCol: clarifaiFace.left_col * width,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onPictureSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    fetch(\"https://trd2022-smartbrain-api.herokuapp.com/imageurl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.input,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response) {\n          fetch(\"https://trd2022-smartbrain-api.herokuapp.com/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((respone) => respone.json())\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            });\n        }\n        console.log(response);\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Particles\n          className=\"particles\"\n          init={particlesInit}\n          options={options}\n        />\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {route === \"home\" ? (\n          <>\n            <Logo />\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onPictureSubmit={this.onPictureSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </>\n        ) : route === \"signin\" ? (\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <SignUp onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"tachyons\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}